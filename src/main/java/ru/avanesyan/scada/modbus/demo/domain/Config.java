package ru.avanesyan.scada.modbus.demo.domain;import jakarta.persistence.Entity;import jakarta.persistence.GeneratedValue;import jakarta.persistence.GenerationType;import jakarta.persistence.Id;import lombok.*;import lombok.Data;import org.hibernate.proxy.HibernateProxy;import java.util.Objects;@Entity@NoArgsConstructor@AllArgsConstructor@Builder@Data@ToStringpublic class Config {    @Id    @GeneratedValue(strategy = GenerationType.IDENTITY)    private Long id;    private String ip;    private Integer port;    private Integer unitId;    @Override    public final boolean equals(Object o) {        if (this == o) return true;        if (o == null) return false;        Class<?> oEffectiveClass = o instanceof HibernateProxy proxy ? proxy.getHibernateLazyInitializer().getPersistentClass() : o.getClass();        Class<?> thisEffectiveClass = this instanceof HibernateProxy proxy ? proxy.getHibernateLazyInitializer().getPersistentClass() : this.getClass();        if (thisEffectiveClass != oEffectiveClass) return false;        Config config = (Config) o;        return getId() != null && Objects.equals(getId(), config.getId());    }    @Override    public final int hashCode() {        return this instanceof HibernateProxy proxy ? proxy.getHibernateLazyInitializer().getPersistentClass().hashCode() : getClass().hashCode();    }}